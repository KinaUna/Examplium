@using Examplium.Client.Services.UserInfos
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject IUserInfosService UserInfosService
@implements IDisposable
@if (_editUserInfo && UserInfosService.CurrentUser != null)
{
    <EditForm Model="UserInfosService.CurrentUser" OnSubmit="UpdateUserInfo">
        <div class="card card bg-notes rounded">
            <div class="card-header bg-success text-white">
                @UserInfosService.CurrentUser.Email
            </div>
            <div class="card-body">
                <label class="text-white-50" for="firstNameInput">First name</label>
                <InputTextArea id="firstNameInput" class="form-control" @bind-Value="UserInfosService.CurrentUser.FirstName" DisplayName="First name"></InputTextArea>
                <label class="text-white-50" for="middleNameInput">Middle name</label>
                <InputTextArea id="middleNameInput" class="form-control" @bind-Value="UserInfosService.CurrentUser.MiddleName" DisplayName="Middle name"></InputTextArea>
                <label class="text-white-50" for="lastNameInput">Last name</label>
                <InputTextArea id="lastNameInput" class="form-control" @bind-Value="UserInfosService.CurrentUser.LastName" DisplayName="Last name"></InputTextArea>
            </div>
            <div class="card-footer">
                <div class="mt-3 w-100">
                    <div class="float-end">
                        <button class="btn btn-primary" type="submit">Save</button>
                        <button class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}
else
{
    <div class="card card bg-notes rounded">
        <div class="card-header bg-success">
            <div class="float-end">
                <button class="btn btn-primary ms-2" @onclick="EditUserInfo"><span class="oi oi-pencil" aria-hidden="true"></span></button>
            </div>
            <h4 class="text-white">@UserInfosService.CurrentUser?.Email</h4>
        </div>
        <div class="card-body">
            <div>First name: @UserInfosService.CurrentUser?.FirstName</div>
            <div>Middle name: @UserInfosService.CurrentUser?.MiddleName</div>
            <div>Last name: @UserInfosService.CurrentUser?.LastName</div>
        </div>
    </div>
}
@code {
    private bool _editUserInfo = false;

    protected override async Task OnInitializedAsync()
    {
        await UserInfosService.GetCurrentUserInfo();
        UserInfosService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        UserInfosService.OnChange -= StateHasChanged;
    }

    private async Task EditUserInfo()
    {
        _editUserInfo = true;
    }

    private async Task CancelEdit()
    {
        _editUserInfo = false;
        await UserInfosService.GetCurrentUserInfo();
    }

    private async Task UpdateUserInfo()
    {
        if (UserInfosService.CurrentUser != null)
        {
            await UserInfosService.UpdateCurrentUser();
        }

        _editUserInfo = false;
    }
}
